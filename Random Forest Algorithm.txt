import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score

data = dataset


print("Dataset Overview:")
print(data.head())

# Define features and target variable
features = ['Population', 'Median_Household_Income', 'Temperature', 'Humidity', 'COVID_Cases']
target = 'Case_Rate'



aux_columns = ['State', 'Year']
X = data[features]
y = data[target]
aux_data = data[aux_columns]
# Split data into training and testing sets
X_train, X_test, y_train, y_test, aux_train, aux_test = train_test_split(
    X, y, aux_data, test_size=0.2, random_state=42
)

# Initialize
model = RandomForestRegressor(random_state=42, n_estimators=100)
model.fit(X_train, y_train)

# Predict
y_pred = model.predict(X_test)

# Evaluate
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)


# Feature importances
feature_importances = pd.DataFrame({
    'Feature': features,
    'Importance': model.feature_importances_
}).sort_values(by='Importance', ascending=False)

test_results = X_test.copy()
test_results['State'] = aux_test['State'].values
test_results['Year'] = aux_test['Year'].values
test_results['Actual Case Rate'] = y_test.values
test_results['Predicted Case Rate'] = y_pred